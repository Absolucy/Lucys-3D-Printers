[gcode_macro PRINT_START]
gcode:
	# This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
	{% set svv = printer.save_variables.variables %}
	{% set target_bed = params.BED|int %}
	{% set target_hotend = params.HOTEND|int %}
	{% set target_chamber = params.CHAMBER|default("40")|int %}
	{% set purge_mode = params.PURGE|default(svv.purge_mode, "basic")|string|lower %}
	{% set do_bed_meshing = params.BED_MESH|default(svv.bed_mesh, True)|int %}
	{% set do_z_tilt = params.Z_TILT|default(svv.z_tilt, True)|int %}
	{% set nozzle_size = params.NOZZLE|default(svv.nozzle_size, 0.4)|float %}
	{% set filament = params.FILAMENT|default("Generic ABS")|string %}
	{% set material = params.MATERIAL|default("ABS")|string %}

	# Setup filament
	SETUP_FILAMENT_VARIABLES FILAMENT_ID="{filament}" MATERIAL="{material}"

	# Homes the printer, sets absolute positioning and updates the Stealthburner leds.
	STATUS_HOMING	# Sets the Stealthburner LEDs to homing mode
	G28 O			# Full home (XYZ)
	G90				# Absolute positioning

	{% if do_bed_meshing == True %}
		BED_MESH_CLEAR	# Clears old saved bed mesh (if any)
	{% endif %}

	# Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
	{% if target_bed > 90 %}
		SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"	# Displays info
		STATUS_HEATING								# Sets the Stealthburner LEDs to heating mode
		M106 S255									# Turns on the part cooling fan
		#SET_PIN PIN=nevermore VALUE=1				# Turns on the Nevermore Micro

		CENTER																			# Go to the center of the bed
		M190 S{target_bed}																# Sets the target temp for the bed
		SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"								# Displays info
		TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}	# Waits for chamber to reach the desired temperature
		SET_DISPLAY_TEXT MSG="Additional soaking for 2 minutes"							# Displays info
		G4 P120000																		# Dwell for 2 minutes, to ensure the temperature is stable																	
	# If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp
	{% else %}
		SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"					# Displays info
		STATUS_HEATING												# Sets the Stealthburner LEDs to heating mode
		CENTER														# Go to the center of the bed
		M190 S{target_bed}											# Sets the target temp for the bed
		SET_DISPLAY_TEXT MSG="Additional soaking for 15 seconds"	# Displays info
		G4 P15000													# Dwell for 15 seconds, to ensure the temperature is stable
	{% endif %}

	# Heating nozzle to 150 degrees. This helps with getting a correct Z-home
	SET_DISPLAY_TEXT MSG="Hotend: 150c"	# Displays info
	M109 S150							# Heats the nozzle to 150c

	{% if do_z_tilt == True %}
		SET_DISPLAY_TEXT MSG="Z-tilt adjust"	# Displays info
		STATUS_LEVELING							# Sets the Stealthburner LEDs to leveling mode
		Z_TILT_ADJUST							# Levels the buildplate via z_tilt_adjust
		G28	O X Y								# Re-homes after z_tilt_adjust
	{% endif %}

	{% if do_bed_meshing == True %}
		SET_DISPLAY_TEXT MSG="Bed mesh"	# Displays info
		STATUS_MESHING					# Sets the Stealthburner LEDs to bed mesh mode
		BED_MESH_CALIBRATE				# Starts bed mesh
	{% endif %}

	# Heats up the nozzle up to target via data from slicer
	SET_DISPLAY_TEXT MSG="Hotend: {target_hotend}c"	# Displays info
	STATUS_HEATING										# Sets the Stealthburner LEDs to heating mode
	CENTER												# Goes to center of the bed
	M107												# Turns off partcooling fan
	M109 S{target_hotend}								# Heats the nozzle to printing temp

	# Setup pressure advance
	PRESSURE_ADVANCE_SELECT NOZZLE={nozzle_size} MATERIAL="{material}"

	# Gets ready to print by updating the the Stealthburner LEDs and purging
	STATUS_PRINTING							# Sets the Stealthburner LEDs to printing mode
	# Clean nozzle and purge into bucket
	CLEAN_NOZZLE
	SET_DISPLAY_TEXT MSG="Printer goes brr"	# Displays info

[gcode_macro PRINT_END]
gcode:
	# safe anti-stringing move coords
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	STATUS_BUSY
	SAVE_GCODE_STATE NAME=print_end_state
	
	M400			# Wait for buffer to clear
	G92 E0			# Zero the extruder
	G1 E-2.0 F3600	# Retract filament

	# Clear bed mesh
	BED_MESH_CLEAR
	# Disable skew correction
	SET_SKEW CLEAR=1
	# Clean the nozzle
	CLEAN_NOZZLE PURGE=0
	
	TURN_OFF_HEATERS
	
	G90															# Absolute positioning
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000						# Move nozzle to remove stringing
	CENTER_BACK													# Move nozzle to center-back
	BOTTOM														# Move bed to bottom
	M107														# Turn off fan
	
	RESTORE_GCODE_STATE NAME=print_end_state
	STATUS_READY

[gcode_macro PRINT_CANCELLED]
gcode:
	G92 E0
	M106 S255
	M104 S0
	M140 S0
	BED_MESH_CLEAR
	SET_SKEW CLEAR=1
	STATUS_BUSY
	CENTER_BACK
	BOTTOM
	STATUS_READY
